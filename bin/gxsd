#/usr/bin/sh

LUA_CPATH="./?.so;$HOME/.luarocks/lib/lua/5.3/?.so;$LUA_CPATH"
export LUA_CPATH

LUA_PATH="./?.lua;$HOME/.luarocks/share/lua/5.3/?.lua;$LUA_PATH"
export LUA_PATH

OS=`uname`
if [ $OS = "Darwin" ]
then
	DYLD_FALLBACK_LIBRARY_PATH=$HOME/usr/local/lib:$HOME/usr/lib:$HOME/.luarocks/lib/lua/5.3:$HOME/usr/local/tmp/cling-obj/lib:$HOME/lib:$HOME/bin_poco/lib:/usr/local/lib:/lib:/usr/lib:/opt/local/lib:/opt/local/lib/postgresql13
	export DYLD_FALLBACK_LIBRARY_PATH
	DYLD_LIBRARY_PATH=DYLD_FALLBACK_LIBRARY_PATH
	export DYLD_LIBRARY_PATH
fi

if [ $# -lt 1 ]
then
	echo "Usage: gxsd  all/<xsd_file_name> [ -b 1/0 ] [ -d <output_directory> ] "
	exit 1
fi
build_mode=0
output_directory=

# while getopts b:d: flag
while getopts b:d: opt
do
	case $opt in
		d) output_directory=$OPTARG;;
		b) build_mode=$OPTARG;;
		\?) echo >&2 "usage: cha [-b 0/1] [-d <output_directory>] file"
			exit 1;;
	esac
	#echo $OPTIND
done
shift `expr $OPTIND - 1`

#echo "---------------"
#echo "OUTPUT_DIRECTORY:" $output_directory
#echo "BUILD_MODE:" $build_mode
#echo "---------------"

if [ -f $HOME/.luarocks/share/lua/5.3/generate_schema.lua ]
then
	LUA_FILE="$HOME/.luarocks/share/lua/5.3/generate_schema.lua"
elif [ -f /usr/local/share/lua/5.3/generate_schema.lua ]
then
	LUA_FILE="/usr/local/share/lua/5.3/generate_schema.lua"
else
	echo "File generate_schema.lua not found"
	exit 1
fi

if [ $1 = "all" ]
then
	if [ "$output_directory" != "" ]
	then
		mkdir -p $output_directory
		cd $output_directory
		for file in `ls -1 xsd_for_test/*.xsd`
		do
			echo "Generating "$file
			echo "--------------"
			lua $LUA_FILE ../$file $build_mode
			if [ $? -ne 0 ]
			then
				exit 1;
			fi
		done
		cd ..
	else
		for file in `ls -1 xsd_for_test/*.xsd`
		do
			echo "Generating "$file
			echo "--------------"
			lua $LUA_FILE $file $build_mode
			if [ $? -ne 0 ]
			then
				exit 1;
			fi
		done
	fi
else
	file=$1
	echo "Generating "$file
	echo "--------------"
	if [ "$output_directory" != "" ]
	then
		mkdir -p $output_directory
		cd $output_directory
		lua $LUA_FILE ../$file $build_mode
		if [ $? -ne 0 ]
		then
			exit 1;
		fi
		cd ..
	else
		lua $LUA_FILE $file $build_mode
		if [ $? -ne 0 ]
		then
			exit 1;
		fi
	fi
fi
